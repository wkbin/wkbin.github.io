<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Java毁青春</title>
  
  
  <link href="https://admin.wbf.ink/atom.xml" rel="self"/>
  
  <link href="https://admin.wbf.ink/"/>
  <updated>2020-11-14T02:25:58.565Z</updated>
  <id>https://admin.wbf.ink/</id>
  
  <author>
    <name>王克斌</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>第一个小程序</title>
    <link href="https://admin.wbf.ink/2020/11/11/wxxcx/"/>
    <id>https://admin.wbf.ink/2020/11/11/wxxcx/</id>
    <published>2020-11-11T06:51:43.000Z</published>
    <updated>2020-11-14T02:25:58.565Z</updated>
    
    <content type="html"><![CDATA[        <h2 id="微信小程序介绍"   >          <a href="#微信小程序介绍" class="heading-link"><i class="fas fa-link"></i></a>微信小程序介绍</h2>      <p>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://pic.downk.cc/item/5fab5a421cd1bbb86be939e9.png" >      </p><p>微信⼩程序，简称<span class="exturl"><a class="exturl__link"   href="https://baike.baidu.com/item/%E5%B0%8F%E7%A8%8B%E5%BA%8F" >⼩程序</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>，英⽂名 Mini Program ，是⼀种不需要下载安装即可使⽤的应⽤，它实现了应⽤“触⼿可及”的梦想，⽤⼾扫⼀扫或搜⼀下即可打开应⽤ </p><a id="more"></a>        <h2 id="为什么学微信⼩程序？"   >          <a href="#为什么学微信⼩程序？" class="heading-link"><i class="fas fa-link"></i></a>为什么学微信⼩程序？</h2>      <ol><li> 微信有海量⽤⼾，⽽且粘性很⾼，在微信⾥开发产品更容易触达⽤⼾。</li><li> 推⼴App 或公众号的成本太⾼。 </li><li> 开发适配成本低。</li><li> 容易⼩规模试错，然后快速迭代。</li><li> 跨平台。</li></ol>        <h2 id="微信⼩程序历史"   >          <a href="#微信⼩程序历史" class="heading-link"><i class="fas fa-link"></i></a>微信⼩程序历史</h2>      <ul><li>2016年1⽉11⽇，微信之⽗张⼩⻰时隔多年的公开亮相，解读了微信的四⼤价值观。张⼩⻰指出， 越来越多产品通过公众号来做，因为这⾥开发、获取⽤⼾和传播成本更低。拆分出来的服务号并没有提供更好的服务，所以微信内部正在研究新的形态，叫<strong>「微信⼩程序」</strong> 需要注意的是，之前是叫 做 <strong>应⽤号</strong></li><li>2016年9⽉21⽇，微信⼩程序正式开启内测。在微信⽣态下，触⼿可及、⽤完即⾛的微信⼩程序引起⼴泛关注。腾讯云正式上线微信⼩程序解决⽅案，提供⼩程序在云端服务器的技术⽅案。</li><li>2017年1⽉9⽇，微信推出的“⼩程序”正式上线。“⼩程序”是⼀种⽆需安装，即可使⽤的⼿机“应⽤”。不需要像往常⼀样下载App，⽤⼾在微信中“⽤完即⾛”。</li></ul>        <h2 id="疯狂的微信⼩程序"   >          <a href="#疯狂的微信⼩程序" class="heading-link"><i class="fas fa-link"></i></a>疯狂的微信⼩程序</h2>      <ol><li>微信⽉活已经达到10.82亿。其中55岁以上的⽤⼾也达到6300万 </li><li>信息传达数达到450亿，较去年增⻓18%;视频通话4.1亿次,增⻓100% </li><li>⼩程序覆盖超过200+⾏业，交易额增⻓超过6倍，服务1000亿+⼈次,创造出了5000亿+的商业价值</li></ol>        <h2 id="还有其他的⼩程序-不容忽视"   >          <a href="#还有其他的⼩程序-不容忽视" class="heading-link"><i class="fas fa-link"></i></a>还有其他的⼩程序 不容忽视</h2>      <ol><li><p>⽀付宝⼩程序</p></li><li><p>百度⼩程序 </p></li><li><p> QQ⼩程序 </p></li><li><p>今⽇头条 + 抖⾳⼩程序 </p></li></ol>        <h2 id="体验"   >          <a href="#体验" class="heading-link"><i class="fas fa-link"></i></a>体验</h2>              <h3 id="官⽅微信⼩程序体验"   >          <a href="#官⽅微信⼩程序体验" class="heading-link"><i class="fas fa-link"></i></a>官⽅微信⼩程序体验</h3>      <p>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://pic.downk.cc/item/5fab5a8f1cd1bbb86be948b7.png" >      </p><p><span class="exturl"><a class="exturl__link"   href="https://github.com/wechat-miniprogram/miniprogram-demo" >⼩程序⽰例源码</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>        <h3 id="其他优秀的第三⽅⼩程序"   >          <a href="#其他优秀的第三⽅⼩程序" class="heading-link"><i class="fas fa-link"></i></a>其他优秀的第三⽅⼩程序</h3>      <ul><li>拼多多</li><li>滴滴出⾏ </li><li>欢乐⽃地主 </li><li>智⾏⽕⻋票 </li><li>唯品会</li></ul>        <h2 id="环境准备"   >          <a href="#环境准备" class="heading-link"><i class="fas fa-link"></i></a>环境准备</h2>      <p>开发微信⼩程序之前，必须要准备好相应的环境 </p>        <h3 id="注册账号"   >          <a href="#注册账号" class="heading-link"><i class="fas fa-link"></i></a>注册账号</h3>      <blockquote><p>建议使用全新的邮箱，没有注册过其他小程序或者公众号的。  </p></blockquote><p>访问<span class="exturl"><a class="exturl__link"   href="https://mp.weixin.qq.com/wxopen/waregister?action=step1" >注册⻚⾯</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>，耐⼼完成注册即可。  </p>        <h3 id="获取APPID"   >          <a href="#获取APPID" class="heading-link"><i class="fas fa-link"></i></a>获取APPID</h3>      <p>由于后期调⽤微信⼩程序的接⼝等功能，需要索取开发者的⼩程序中的 APPID APPID ，所以在注册成功后，可登录，然后获取APPID。  </p><p><span class="exturl"><a class="exturl__link"   href="https://mp.weixin.qq.com/" >登录</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>，成功后可看到如下界⾯  </p><p>然后复制你的APPID,悄悄的保存起来，不要给别⼈看到😄。  </p><p>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://pic.downk.cc/item/5fab5f8d1cd1bbb86bea3359.png" >      </p><p>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://pic.downk.cc/item/5fab5fb71cd1bbb86bea3ce2.png" >      </p>        <h3 id="开发⼯具"   >          <a href="#开发⼯具" class="heading-link"><i class="fas fa-link"></i></a>开发⼯具</h3>      <p><span class="exturl"><a class="exturl__link"   href="https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html" >下载地址</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>  </p><p>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://pic.downk.cc/item/5fab60271cd1bbb86bea5270.png" >      </p><p>微信⼩程序⾃带开发者⼯具，集 <strong>开发</strong> <strong>预览</strong> <strong>调试</strong> <strong>发布</strong>于⼀⾝的完整环境。但是由于编码的体验不算好，因此 建议使⽤  vs code + 微信小程序编辑工具来实现编码，vs code 负责敲代码， 微信编辑工具 微信编辑工具负责预览  </p>        <h2 id="第⼀个微信⼩程序"   >          <a href="#第⼀个微信⼩程序" class="heading-link"><i class="fas fa-link"></i></a>第⼀个微信⼩程序</h2>              <h3 id="打开微信开发者⼯具"   >          <a href="#打开微信开发者⼯具" class="heading-link"><i class="fas fa-link"></i></a>打开微信开发者⼯具</h3>      <p>注意第⼀次登录的时候需要扫码登录 </p><p>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://pic.downk.cc/item/5fab62911cd1bbb86beabdc6.png" >      </p>        <h3 id="新建小程序项目"   >          <a href="#新建小程序项目" class="heading-link"><i class="fas fa-link"></i></a>新建小程序项目</h3>      <p>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://pic.downk.cc/item/5fab62f71cd1bbb86bead040.png" >      </p>        <h3 id="填写项⽬信息"   >          <a href="#填写项⽬信息" class="heading-link"><i class="fas fa-link"></i></a>填写项⽬信息</h3>      <p>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://pic.downk.cc/item/5fab63371cd1bbb86beadacc.png" >      </p>        <h3 id="成功"   >          <a href="#成功" class="heading-link"><i class="fas fa-link"></i></a>成功</h3>      <p>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://pic.downk.cc/item/5fab60271cd1bbb86bea5270.png" >      </p>        <h2 id="微信开发者⼯具介绍"   >          <a href="#微信开发者⼯具介绍" class="heading-link"><i class="fas fa-link"></i></a>微信开发者⼯具介绍</h2>      <p>详细的使⽤，可以查看<span class="exturl"><a class="exturl__link"   href="https://developers.weixin.qq.com/miniprogram/dev/devtools/devtools.html" >官⽹</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>  </p><p>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://pic.downk.cc/item/5fab84aa1cd1bbb86bf2016c.png" >      </p>        <h2 id="⼩程序结构⽬录"   >          <a href="#⼩程序结构⽬录" class="heading-link"><i class="fas fa-link"></i></a>⼩程序结构⽬录</h2>      <p>⼩程序框架的⽬标是通过尽可能简单、⾼效的⽅式让开发者可以在微信中开发具有原⽣APP体验的服务。<br>⼩程序框架提供了⾃⼰的视图层描述语⾔ WXML 和 WXSS ，以及 JavaScript ，并在视图层与逻<br>辑层间提供了数据传输和事件系统，让开发者能够专注于数据与逻辑  </p><div class="table-container"><table><thead><tr><th align="center">结构</th><th align="center">传统Web</th><th align="center">微信小程序</th></tr></thead><tbody><tr><td align="center">结构</td><td align="center">HTML</td><td align="center">WXML</td></tr><tr><td align="center">样式</td><td align="center">CSS</td><td align="center">WXSS</td></tr><tr><td align="center">逻辑</td><td align="center">JavaScript</td><td align="center">JavaScript</td></tr><tr><td align="center">配置</td><td align="center">无</td><td align="center">JSON</td></tr></tbody></table></div><p>通过以上对⽐得出，传统web是三层结构。⽽微信⼩程序是四层结构，多了⼀层配置<code>.json</code>  </p>        <h3 id="基本的项目目录"   >          <a href="#基本的项目目录" class="heading-link"><i class="fas fa-link"></i></a>基本的项目目录</h3>      <p>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://pic.downk.cc/item/5fab88d51cd1bbb86bf30fe6.png" >      </p>        <h2 id="小程序配置文件"   >          <a href="#小程序配置文件" class="heading-link"><i class="fas fa-link"></i></a>小程序配置文件</h2>      <p>⼀个⼩程序应⽤程序会包括最基本的两种配置⽂件。⼀种是全局的<strong>app.json</strong>和 ⻚⾯⾃⼰的<strong>page.sjon</strong></p><blockquote><p>注意：配置文件中不能出现注释</p></blockquote>        <h3 id="全局配置app-json"   >          <a href="#全局配置app-json" class="heading-link"><i class="fas fa-link"></i></a>全局配置app.json</h3>      <p><strong>app.json</strong> 是当前⼩程序的全局配置，包括了⼩程序的所有⻚⾯路径、界⾯表现、⽹络超时时间、底部tab等。普通快速启动项⽬⾥边的  <strong>app.json</strong> 配置</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;pages&quot;:[</span><br><span class="line">&quot;pages&#x2F;index&#x2F;index&quot;,</span><br><span class="line">&quot;pages&#x2F;logs&#x2F;logs&quot;</span><br><span class="line">],</span><br><span class="line">&quot;window&quot;:&#123;</span><br><span class="line">&quot;backgroundTextStyle&quot;:&quot;light&quot;,</span><br><span class="line">&quot;navigationBarBackgroundColor&quot;: &quot;#fff&quot;,</span><br><span class="line">&quot;navigationBarTitleText&quot;: &quot;WeChat&quot;,</span><br><span class="line">&quot;navigationBarTextStyle&quot;:&quot;black&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>字段的含义  </p><ol><li>pages 字段 —— 用于描述当前小程序所有页面路径，这是为了让微信客服知道当前你的小程序页面定义再哪个目录。</li><li>window 字段 —— 定义小程序所有页面的顶部背景颜色，文字颜色定义等。</li><li>完整的配置信息请参考 <span class="exturl"><a class="exturl__link"   href="https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/app.html" >app.json配置</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></li></ol>        <h3 id="Tabbar"   >          <a href="#Tabbar" class="heading-link"><i class="fas fa-link"></i></a>Tabbar</h3>      <p>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://pic.downk.cc/item/5fab8f331cd1bbb86bf4da86.png" >      </p>        <h3 id="页面配置-page-json"   >          <a href="#页面配置-page-json" class="heading-link"><i class="fas fa-link"></i></a>页面配置 page.json</h3>      <p>这里的<code>page.json</code>其实用来表示页面目录下的<code>page.json</code>这类和⼩程序⻚⾯相关的配置。</p><p>开发者可以独⽴定义每个⻚⾯的⼀些属性，如顶部颜⾊、是否允许下拉刷新等等。</p><p>页面的配置只能设置app.json中部分window配置项的内容，页面中配置项会覆盖app.json的window中相同的配置项。</p><div class="table-container"><table><thead><tr><th align="center">属性</th><th align="center">类型</th><th align="center">默认值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">navigationBarBackgroundColor</td><td align="center">HexColor</td><td align="center">#000000</td><td align="center">导航栏背景颜⾊，如#000000</td></tr><tr><td align="center">navigationBarTextStyle</td><td align="center">String</td><td align="center">white</td><td align="center">导航栏标题颜⾊，仅⽀持black /white</td></tr><tr><td align="center">navigationBarTitleText</td><td align="center">String</td><td align="center"></td><td align="center">导航栏标题⽂字内容</td></tr><tr><td align="center">backgroundColor</td><td align="center">HexColor</td><td align="center">#FFFFFF</td><td align="center">窗⼝的背景⾊</td></tr><tr><td align="center">backgroundTextStyle</td><td align="center">String</td><td align="center">dark</td><td align="center">下拉loading的样式，仅⽀持 dark / light</td></tr><tr><td align="center">enablePullDownRefresh</td><td align="center">Boolean</td><td align="center">false</td><td align="center">是否全局开启下拉刷新。详⻅<span class="exturl"><a class="exturl__link"   href="https://developers.weixin.qq.com/miniprogram/dev/framework/app-service/page.html#onpulldownrefresh" >Page.onPullDownRefresh</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></td></tr><tr><td align="center">onReachBottomDistance</td><td align="center">Number</td><td align="center">50</td><td align="center">⻚⾯上拉触底事件触发时距⻚⾯底部距离，单位为px。详⻅ <span class="exturl"><a class="exturl__link"   href="https://developers.weixin.qq.com/miniprogram/dev/framework/app-service/page.html#onreachbottom" >Page.onReachBottom</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></td></tr><tr><td align="center">disableScroll</td><td align="center">Boolean</td><td align="center">false</td><td align="center">设置为 true 则⻚⾯整体不能上下滚动；只在⻚⾯配置中有 效，⽆法在app.json中设置该项</td></tr></tbody></table></div>        <h3 id="SiteMap配置-了解即可"   >          <a href="#SiteMap配置-了解即可" class="heading-link"><i class="fas fa-link"></i></a>SiteMap配置-了解即可</h3>      <p>⼩程序根⽬录下的<strong>sitemap.json</strong>⽂件⽤于配置⼩程序及其⻚⾯是否允许被微信索引。</p>        <h3 id="模板语法"   >          <a href="#模板语法" class="heading-link"><i class="fas fa-link"></i></a>模板语法</h3>      <p>WXML（WeiXin Markup Language）是框架设计的⼀套标签语⾔，结合<span class="exturl"><a class="exturl__link"   href="https://developers.weixin.qq.com/miniprogram/dev/component/index.html" >基础组件</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>、<span class="exturl"><a class="exturl__link"   href="https://developers.weixin.qq.com/miniprogram/dev/framework/view/wxml/event.html" >事件系统</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>，可以构<br>建出⻚⾯的结构。  </p>        <h3 id="数据绑定"   >          <a href="#数据绑定" class="heading-link"><i class="fas fa-link"></i></a>数据绑定</h3>              <h4 id="普通写法"   >          <a href="#普通写法" class="heading-link"><i class="fas fa-link"></i></a>普通写法</h4>      <figure class="highlight xml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span> &#123;&#123; message &#125;&#125; <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></div></figure><figure class="highlight"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Page(&#123;</span><br><span class="line">  data: &#123;</span><br><span class="line">    message: &#x27;Hello MINA!&#x27;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></div></figure>        <h4 id="组件属性"   >          <a href="#组件属性" class="heading-link"><i class="fas fa-link"></i></a>组件属性</h4>      <figure class="highlight xml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">id</span>=<span class="string">&quot;item-&#123;&#123;id&#125;&#125;&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></div></figure><figure class="highlight"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Page(&#123;</span><br><span class="line">  data: &#123;</span><br><span class="line">    id: 0</span><br><span class="line"> &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></div></figure>        <h4 id="bool类型"   >          <a href="#bool类型" class="heading-link"><i class="fas fa-link"></i></a>bool类型</h4>      <p>不要直接写checked= false ，其计算结果是⼀个字符串  </p><figure class="highlight xml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">checkbox</span> <span class="attr">checked</span>=<span class="string">&quot;&#123;&#123;false&#125;&#125;&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">checkbox</span>&gt;</span></span><br></pre></td></tr></table></div></figure>        <h3 id="运算"   >          <a href="#运算" class="heading-link"><i class="fas fa-link"></i></a>运算</h3>              <h4 id="三元运算"   >          <a href="#三元运算" class="heading-link"><i class="fas fa-link"></i></a>三元运算</h4>      <figure class="highlight xml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">hidden</span>=<span class="string">&quot;&#123;&#123;flag ? true : false&#125;&#125;&quot;</span>&gt;</span> Hidden <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></div></figure>        <h4 id="算数运算"   >          <a href="#算数运算" class="heading-link"><i class="fas fa-link"></i></a>算数运算</h4>      <figure class="highlight xml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span> &#123;&#123;a + b&#125;&#125; + &#123;&#123;c&#125;&#125; + d <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></div></figure><figure class="highlight"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Page(&#123;</span><br><span class="line">  data: &#123;</span><br><span class="line">    a: 1,</span><br><span class="line">    b: 2,</span><br><span class="line">    c: 3</span><br><span class="line"> &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></div></figure>        <h4 id="逻辑判断"   >          <a href="#逻辑判断" class="heading-link"><i class="fas fa-link"></i></a>逻辑判断</h4>      <figure class="highlight xml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:if</span>=<span class="string">&quot;&#123;&#123;length &gt; 5&#125;&#125;&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></div></figure>        <h4 id="字符串运算"   >          <a href="#字符串运算" class="heading-link"><i class="fas fa-link"></i></a>字符串运算</h4>      <figure class="highlight xml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>&#123;&#123;&quot;hello&quot; + name&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></div></figure><figure class="highlight"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Page(&#123;</span><br><span class="line">  data:&#123;</span><br><span class="line">    name: &#x27;MINA&#x27;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></div></figure>        <h4 id="注意"   >          <a href="#注意" class="heading-link"><i class="fas fa-link"></i></a>注意</h4>      <p>花括号和引号之间如果有空格，将最终被解析成为字符串  </p>        <h2 id="列表渲染"   >          <a href="#列表渲染" class="heading-link"><i class="fas fa-link"></i></a>列表渲染</h2>              <h3 id="wx-for"   >          <a href="#wx-for" class="heading-link"><i class="fas fa-link"></i></a>wx:for</h3>      <p>项的变量名默认为 <code>item</code> <code>wx:for-item</code> 可以指定数组当前元素的变量名 </p><p>下标变量名默认为 <code>index</code> <code>wx-for-index</code> 可以指定数组当前下标的变量名</p><p><code>wx:key</code> ⽤来提⾼数组渲染的性能</p><p><code>wx:key</code> 绑定的值 有如下选择 </p><ol><li><p><code>string</code> 类型，表⽰ 循环项中的唯⼀属性 如 </p><figure class="highlight"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">list:[&#123;id:0,name:&quot;炒饭&quot;&#125;,&#123;id:1,name:&quot;炒面&quot;&#125;]</span><br><span class="line">wx:key=&quot;id&quot;</span><br></pre></td></tr></table></div></figure></li><li><p>保留字<code>*this</code> ，它的意思是<code>item</code> 本⾝ ，*this 代表的必须是 唯⼀的字符串和数组</p><figure class="highlight"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">list:[1,2,3,4,5]</span><br><span class="line">wx:key=&quot;*this&quot;</span><br></pre></td></tr></table></div></figure></li></ol><p><strong>代码：</strong> </p><figure class="highlight xml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:for</span>=<span class="string">&quot;&#123;&#123;array&#125;&#125;&quot;</span> <span class="attr">wx:key</span>=<span class="string">&quot;id&quot;</span>&gt;</span></span><br><span class="line"> &#123;&#123;index&#125;&#125;: &#123;&#123;item.message&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></div></figure><figure class="highlight"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Page(&#123;</span><br><span class="line">  data: &#123;</span><br><span class="line">    array: [&#123;</span><br><span class="line">      id:0,</span><br><span class="line">      message: &#x27;foo&#x27;,</span><br><span class="line">   &#125;, &#123;</span><br><span class="line">      id:1,</span><br><span class="line">      message: &#x27;bar&#x27;</span><br><span class="line">   &#125;]</span><br><span class="line"> &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></div></figure>        <h3 id="block"   >          <a href="#block" class="heading-link"><i class="fas fa-link"></i></a>block</h3>      <p>渲染⼀个包含多节点的结构块 block最终不会变成真正的dom元素 </p><figure class="highlight xml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">block</span> <span class="attr">wx:for</span>=<span class="string">&quot;&#123;&#123;[1, 2, 3]&#125;&#125;&quot;</span> <span class="attr">wx:key</span>=<span class="string">&quot;*this&quot;</span> &gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span>&gt;</span> &#123;&#123;index&#125;&#125;: <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span>&gt;</span> &#123;&#123;item&#125;&#125; <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">block</span>&gt;</span></span><br></pre></td></tr></table></div></figure>        <h2 id="条件渲染"   >          <a href="#条件渲染" class="heading-link"><i class="fas fa-link"></i></a>条件渲染</h2>              <h3 id="wx-if"   >          <a href="#wx-if" class="heading-link"><i class="fas fa-link"></i></a>wx:if</h3>      <p>在框架中，使⽤<code>wx:if=&quot;&#123;&#123;condition&#125;&#125;&quot;</code> 来判断是否需要渲染该代码块： </p><figure class="highlight xml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:if</span>=<span class="string">&quot;&#123;&#123;false&#125;&#125;&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:elif</span>=<span class="string">&quot;&#123;&#123;true&#125;&#125;&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:else</span>&gt;</span>3<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></div></figure>        <h3 id="hidden"   >          <a href="#hidden" class="heading-link"><i class="fas fa-link"></i></a>hidden</h3>      <figure class="highlight xml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">hidden</span>=<span class="string">&quot;&#123;&#123;condition&#125;&#125;&quot;</span>&gt;</span> True <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></div></figure><p>类似 <code>wx:if</code></p><p>频繁切换 ⽤<code>hidden</code></p><p>不常使⽤ ⽤<code>wx:if</code></p>        <h2 id="小程序事件的绑定"   >          <a href="#小程序事件的绑定" class="heading-link"><i class="fas fa-link"></i></a>小程序事件的绑定</h2>      <p>⼩程序中绑定事件，通过bind关键字来实现。如<code>bindtap</code> <code>bindinput</code> <code>bindchange</code> 等 </p><p>不同的组件⽀持不同的事件，具体看组件的说明即可。 </p>        <h3 id="wxml"   >          <a href="#wxml" class="heading-link"><i class="fas fa-link"></i></a>wxml</h3>      <figure class="highlight xml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">bindinput</span>=<span class="string">&quot;handleInput&quot;</span> /&gt;</span></span><br></pre></td></tr></table></div></figure>        <h3 id="page"   >          <a href="#page" class="heading-link"><i class="fas fa-link"></i></a>page</h3>      <figure class="highlight javascript"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Page(&#123;</span><br><span class="line">  <span class="comment">// 绑定的事件</span></span><br><span class="line">  handleInput: <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(e);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;值被改变了&quot;</span>);</span><br><span class="line"> &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></div></figure>        <h3 id="特别注意"   >          <a href="#特别注意" class="heading-link"><i class="fas fa-link"></i></a>特别注意</h3>      <ol><li><p>绑定事件时不能带参数 不能带括号 以下为错误写法</p><figure class="highlight html"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">bindinput</span>=<span class="string">&quot;handleInput(100)&quot;</span> /&gt;</span></span><br></pre></td></tr></table></div></figure></li><li><p>事件传值 通过标签⾃定义属性的⽅式 和<code>value</code> </p><figure class="highlight html"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">bindinput</span>=<span class="string">&quot;handleInput&quot;</span> <span class="attr">data-item</span>=<span class="string">&quot;100&quot;</span> /&gt;</span></span><br></pre></td></tr></table></div></figure></li><li><p>事件触发时获取数据 </p><figure class="highlight javascript"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">handleInput: <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">   <span class="comment">// &#123;item:100&#125;</span></span><br><span class="line">  <span class="built_in">console</span>.log(e.currentTarget.dataset)</span><br><span class="line">   <span class="comment">// 输入框的值</span></span><br><span class="line">  <span class="built_in">console</span>.log(e.detail.value);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure></li></ol>        <h2 id="样式WXSS"   >          <a href="#样式WXSS" class="heading-link"><i class="fas fa-link"></i></a>样式WXSS</h2>      <p>WXSS( <code>WeiXin Style Sheets</code> )是⼀套样式语⾔，⽤于描述 WXML的组件样式。 </p><p>与 CSS 相⽐，WXSS 扩展的特性有： </p><ul><li>响应式⻓度单位<code>rpx</code> </li><li>样式导⼊ </li></ul>        <h3 id="尺寸单位"   >          <a href="#尺寸单位" class="heading-link"><i class="fas fa-link"></i></a>尺寸单位</h3>      <p><code>rpx</code> （responsive pixel）: 可以根据屏幕宽度进⾏⾃适应。规定屏幕宽为 750rpx。如在 <code>iPhone6</code> 上，屏幕宽度为 375px </p><p>，共有750个物理像素，则 <code>750rpx = 375px = 750物理像素</code> ，<code>1rpx = 0.5px = 1物理像素</code> 。</p><div class="table-container"><table><thead><tr><th>设备</th><th>rpx换算px (屏幕宽度/750)</th><th>px换算rpx (750/屏幕宽度)</th></tr></thead><tbody><tr><td>iPhone5</td><td>1rpx = 0.42px</td><td>1px = 2.34rpx</td></tr><tr><td>iPhone6</td><td>1rpx = 0.5px</td><td>1px = 2rpx</td></tr><tr><td>iPhone6 Plus</td><td>1rpx = 0.552px</td><td>1px = 1.81rpx</td></tr></tbody></table></div><p>建议： 开发微信⼩程序时设计师可以⽤ iPhone6 作为视觉稿的标准。 </p><p>使⽤步骤： </p><ol><li>确定设计稿宽度 pageWidth </li><li> 计算⽐例 <code>750rpx = pageWidth px</code> ，因此 <code>1px=750rpx/pageWidth</code> 。</li><li>在less⽂件中，只要把设计稿中的 <code>px</code> =&gt; <code>750/pageWidth rpx</code> 即可。 </li></ol>        <h3 id="样式导⼊"   >          <a href="#样式导⼊" class="heading-link"><i class="fas fa-link"></i></a>样式导⼊</h3>      <p>wxss中直接就⽀持，样式导⼊功能。 </p><p>也可以和 less中的导⼊混⽤。 </p><p>使⽤ <code>@import</code> 语句可以导⼊外联样式表，只⽀持<strong>相对路径</strong>。 </p><p><strong>⽰例代码：</strong> </p><figure class="highlight css"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** common.wxss **/</span></span><br><span class="line"><span class="selector-class">.small-p</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>:<span class="number">5px</span>; &#125;</span><br></pre></td></tr></table></div></figure><figure class="highlight css"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** app.wxss **/</span></span><br><span class="line"><span class="keyword">@import</span> <span class="string">&quot;common.wxss&quot;</span>;</span><br><span class="line"><span class="selector-class">.middle-p</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>:<span class="number">15px</span>; &#125;</span><br></pre></td></tr></table></div></figure>        <h3 id="选择器"   >          <a href="#选择器" class="heading-link"><i class="fas fa-link"></i></a>选择器</h3>      <p>特别需要注意的是 ⼩程序 不⽀持通配符 <code>*</code> 因此以下代码⽆效！ </p><figure class="highlight css"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">*&#123;</span><br><span class="line">    <span class="attribute">margin</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">box-sizing</span>:border-box; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>⽬前⽀持的选择器有：</p><div class="table-container"><table><thead><tr><th>选择器</th><th>样例</th><th>样例描述</th></tr></thead><tbody><tr><td>.class</td><td>.intro</td><td>选择所有拥有 class=”intro” 的组件</td></tr><tr><td>#id</td><td>#firstname</td><td>选择拥有 id=“firstname“ 的组件</td></tr><tr><td>element</td><td>view</td><td>选择所有 view 组件</td></tr><tr><td>element, element</td><td>view, checkbox</td><td>选择所有⽂档的 view 组件和所有的 checkbox 组件</td></tr><tr><td>nth-child(n)</td><td>view:nth-child(n)</td><td>选择某个索引的标签</td></tr><tr><td>::after</td><td>view::after</td><td>在 view 组件后边插⼊内容</td></tr><tr><td>::before</td><td>view::before</td><td>在 view 组件前边插⼊内容</td></tr></tbody></table></div>        <h3 id="小程序中使用less"   >          <a href="#小程序中使用less" class="heading-link"><i class="fas fa-link"></i></a>小程序中使用less</h3>      <p>原⽣⼩程序不⽀持 <code>less</code> ，其他基于⼩程序的框架⼤体都⽀持，如 <code>wepy</code> <code>mpvue</code> <code>taro</code> 等。 </p><p>但是仅仅因为⼀个less功能，⽽去引⼊⼀个框架，肯定是不可取的。因此可以⽤以下⽅式来实现 </p><ol><li><p>编辑器是 <code>vscode</code> </p></li><li><p>安装插件 <code>easy less</code> </p><p>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://pic.downk.cc/item/5facf23b1cd1bbb86b4d91e4.png" >      </p></li><li><p>在vs code的设置中加⼊如下，配置 </p><figure class="highlight"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;less.compile&quot;: &#123;</span><br><span class="line">     &quot;outExt&quot;:       &quot;.wxss&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure></li><li><p> 在要编写样式的地⽅，新建 <code>less</code> ⽂件，如 <code>index.less</code> ，然后正常编辑即可。</p></li></ol>        <h2 id="常⻅组件"   >          <a href="#常⻅组件" class="heading-link"><i class="fas fa-link"></i></a>常⻅组件</h2>      <p>重点讲解⼩程序中常⽤的布局组件</p>        <h3 id="view"   >          <a href="#view" class="heading-link"><i class="fas fa-link"></i></a>view</h3>      <p>代替 原来的 <code>div</code> 标签</p><figure class="highlight xml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">hover-class</span>=<span class="string">&quot;h-class&quot;</span>&gt;</span></span><br><span class="line">点击我试试</span><br><span class="line"> <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></div></figure>        <h3 id="text"   >          <a href="#text" class="heading-link"><i class="fas fa-link"></i></a>text</h3>      <ol><li>⽂本标签 </li><li>只能嵌套text</li><li>⻓按⽂字可以复制（只有该标签有这个功能） </li><li>可以对空格 回⻋ 进⾏编码 </li></ol><div class="table-container"><table><thead><tr><th>属性名</th><th>类型</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>selectable</td><td>Boolean</td><td>false</td><td>⽂本是否可选</td></tr><tr><td>Boolean</td><td>Boolean</td><td>false</td><td>是否解码</td></tr></tbody></table></div>        <h4 id="代码"   >          <a href="#代码" class="heading-link"><i class="fas fa-link"></i></a>代码</h4>      <figure class="highlight xml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">text</span> <span class="attr">selectable</span>=<span class="string">&quot;&#123;&#123;false&#125;&#125;&quot;</span> <span class="attr">decode</span>=<span class="string">&quot;&#123;&#123;false&#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">  普<span class="symbol">&amp;nbsp;</span>通</span><br><span class="line"> <span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br></pre></td></tr></table></div></figure>        <h3 id="image"   >          <a href="#image" class="heading-link"><i class="fas fa-link"></i></a>image</h3>      <ol><li> 图⽚标签，image组件默认宽度320px、⾼度240px </li><li>⽀持懒加载</li></ol><div class="table-container"><table><thead><tr><th>属性名</th><th>类型</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>src</td><td>String</td><td></td><td>图⽚资源地址</td></tr><tr><td>mode</td><td>String</td><td>‘scaleToFill’</td><td>图⽚裁剪、缩放的模式</td></tr><tr><td>lazy-load</td><td>Boolean</td><td>false</td><td>图⽚懒加载</td></tr></tbody></table></div><p><strong>mode 有效值：</strong> </p><p>mode 有 13 种模式，其中 4 种是缩放模式，9种是裁剪模式。</p><div class="table-container"><table><thead><tr><th>模式</th><th>值</th><th>说明</th></tr></thead><tbody><tr><td>缩放</td><td>scaleToFill</td><td>不保持纵横⽐缩放图⽚，使图⽚的宽⾼完全拉伸⾄填满image 元素</td></tr><tr><td>缩放</td><td>aspectFit</td><td>保持纵横⽐缩放图⽚，使图⽚的⻓边能完全显⽰出来。</td></tr><tr><td>缩放</td><td>aspectFill</td><td>保持纵横⽐缩放图⽚，只保证图⽚的短边能完全显⽰出来。</td></tr><tr><td>缩放</td><td>widthFix</td><td>宽度不变，⾼度⾃动变化，保持原图宽⾼⽐不变</td></tr><tr><td>裁剪</td><td>top</td><td>不缩放图⽚，只显⽰图⽚的顶部区域</td></tr><tr><td>裁剪</td><td>bottom</td><td>不缩放图⽚，只显⽰图⽚的底部区域</td></tr><tr><td>裁剪</td><td>center</td><td>不缩放图⽚，只显⽰图⽚的中间区域</td></tr><tr><td>裁剪</td><td>left</td><td>不缩放图⽚，只显⽰图⽚的左边区域</td></tr><tr><td>裁剪</td><td>right</td><td>不缩放图⽚，只显⽰图⽚的右边区域</td></tr><tr><td>裁剪</td><td>top left</td><td>不缩放图⽚，只显⽰图⽚的左上边区域</td></tr><tr><td>裁剪</td><td>top right</td><td>不缩放图⽚，只显⽰图⽚的右上边区域</td></tr><tr><td>裁剪</td><td>bottom left</td><td>不缩放图⽚，只显⽰图⽚的左下边区域</td></tr><tr><td>裁剪</td><td>bottom right</td><td>不缩放图⽚，只显⽰图⽚的右下边区域</td></tr></tbody></table></div>        <h3 id="swiper"   >          <a href="#swiper" class="heading-link"><i class="fas fa-link"></i></a>swiper</h3>      <blockquote><p>微信内置轮播图组件</p></blockquote><p>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://pic.downk.cc/item/5fae45631cd1bbb86b9630eb.png" >      </p><p>默认宽度 100% ⾼度 150px </p><div class="table-container"><table><thead><tr><th>属性名</th><th>类型</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>indicator-dots</td><td>Boolean</td><td>false</td><td>是否显⽰⾯板指⽰点</td></tr><tr><td>indicator-color</td><td>Color</td><td>rgba(0, 0, 0, .3)</td><td>指⽰点颜⾊</td></tr><tr><td>indicator-active-color</td><td>Color</td><td>#000000</td><td>当前选中的指⽰点颜⾊</td></tr><tr><td>autoplay</td><td>Boolean</td><td>false</td><td>是否⾃动切换</td></tr><tr><td>interval</td><td>Number</td><td>5000</td><td>⾃动切换时间间隔</td></tr><tr><td>circular</td><td>Boolean</td><td>false</td><td>是否循环轮播</td></tr></tbody></table></div>        <h3 id="swiper-1"   >          <a href="#swiper-1" class="heading-link"><i class="fas fa-link"></i></a>swiper</h3>      <p>滑块视图容器。</p>        <h3 id="swiper-item"   >          <a href="#swiper-item" class="heading-link"><i class="fas fa-link"></i></a>swiper-item</h3>      <blockquote><p>滑块</p></blockquote><p><strong>默认宽度和⾼度都是100%</strong></p>        <h3 id="navigator"   >          <a href="#navigator" class="heading-link"><i class="fas fa-link"></i></a>navigator</h3>      <blockquote><p>导航组件 类似超链接标签</p></blockquote><div class="table-container"><table><thead><tr><th>属性名</th><th>类型</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>target</td><td>String</td><td>self</td><td>在哪个⽬标上发⽣跳转，默认当前⼩程序，可选值 self/miniProgram</td></tr><tr><td>url</td><td>String</td><td></td><td>当前⼩程序内的跳转链接</td></tr><tr><td>open-type</td><td>String</td><td>navigate</td><td>跳转⽅式</td></tr></tbody></table></div><p><strong>open-type 有效值：</strong></p><div class="table-container"><table><thead><tr><th>值</th><th>说明</th></tr></thead><tbody><tr><td>navigate</td><td>保留当前⻚⾯，跳转到应⽤内的某个⻚⾯，但是不能跳到tabbar ⻚⾯</td></tr><tr><td>redirect</td><td>关闭当前⻚⾯，跳转到应⽤内的某个⻚⾯，但是不允许跳转到tabbar ⻚⾯。</td></tr><tr><td>switchTab</td><td>跳转到 tabBar ⻚⾯，并关闭其他所有⾮ tabBar ⻚⾯</td></tr><tr><td>reLaunch</td><td>关闭所有⻚⾯，打开到应⽤内的某个⻚⾯</td></tr><tr><td>navigateBack</td><td>关闭当前⻚⾯，返回上⼀⻚⾯或多级⻚⾯。可通过 getCurrentPages() 获取当前的⻚⾯栈，决定需要返回⼏层</td></tr><tr><td>exit</td><td>退出⼩程序，target=miniProgram时⽣效</td></tr></tbody></table></div>        <h3 id="rich-text"   >          <a href="#rich-text" class="heading-link"><i class="fas fa-link"></i></a>rich-text</h3>      <blockquote><p>富文本标签</p></blockquote><p>可以将字符串解析成 对应标签，类似 vue中 <code>v-html</code> 功能</p><p>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://pic.downk.cc/item/5fae48b21cd1bbb86b96feb5.png" >      </p><p><strong>代码</strong></p><figure class="highlight xml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">// 1   index.wxml 加载 节点数组 <span class="tag">&lt;<span class="name">rich-text</span> <span class="attr">nodes</span>=<span class="string">&quot;&#123;&#123;nodes&#125;&#125;&quot;</span> <span class="attr">bindtap</span>=<span class="string">&quot;tap&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">rich-text</span>&gt;</span></span><br><span class="line">// 2 加载 字符串 <span class="tag">&lt;<span class="name">rich-text</span> <span class="attr">nodes</span>=<span class="string">&#x27;&lt;img</span></span></span><br><span class="line"><span class="tag"><span class="string">src=&quot;https://developers.weixin.qq.com/miniprogram/assets/images/head_global_z_@all.p</span></span></span><br><span class="line"><span class="tag"><span class="string">ng&quot; alt=&quot;&quot;&gt;&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">rich-text</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">// index.js</span><br><span class="line">    </span><br><span class="line">Page(&#123;</span><br><span class="line">  data: &#123;</span><br><span class="line">    nodes: [&#123;</span><br><span class="line">      name: &#x27;div&#x27;,</span><br><span class="line">      attrs: &#123;</span><br><span class="line">        class: &#x27;div_class&#x27;,</span><br><span class="line">        style: &#x27;line-height: 60px; color: red;&#x27;</span><br><span class="line">     &#125;,</span><br><span class="line">      children: [&#123;</span><br><span class="line">        type: &#x27;text&#x27;,</span><br><span class="line">        text: &#x27;Hello<span class="symbol">&amp;nbsp;</span>World!&#x27;</span><br><span class="line">     &#125;]</span><br><span class="line">   &#125;]</span><br><span class="line"> &#125;,</span><br><span class="line">  tap() &#123;</span><br><span class="line">    console.log(&#x27;tap&#x27;)</span><br><span class="line"> &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></div></figure>        <h3 id="nodes属性"   >          <a href="#nodes属性" class="heading-link"><i class="fas fa-link"></i></a>nodes属性</h3>      <p><code>nodes</code> 属性支持 <code>字符串</code> 和 <code>标签节点数组</code> </p><div class="table-container"><table><thead><tr><th>属性</th><th>说明</th><th>类型</th><th>必填</th><th>备注</th></tr></thead><tbody><tr><td>name</td><td>标签名</td><td>string</td><td>是</td><td>⽀持部分受信任的 HTML 节点</td></tr><tr><td>attrs</td><td>属性</td><td>object</td><td>否</td><td>⽀持部分受信任的属性，遵循 Pascal 命名法</td></tr><tr><td>children</td><td>⼦节点列表</td><td>array</td><td>否</td><td>结构和 nodes ⼀致</td></tr></tbody></table></div><p><strong>⽂本节点：type = text</strong></p><div class="table-container"><table><thead><tr><th>属性</th><th>说明</th><th>类型</th><th>必填</th><th>备注</th></tr></thead><tbody><tr><td>text</td><td>⽂本</td><td>string</td><td>是</td><td>⽀持entities</td></tr></tbody></table></div><ul><li><code>nodes</code>不推荐使用 <code>String</code> 类型，性能会有所下降。</li><li><code>rich-text</code> 组件内屏蔽所有节点的事件。</li><li><code>attrs</code> 属性不⽀持 id ，⽀持 class 。</li><li><code>name</code> 属性⼤⼩写不敏感。 </li><li>如果使⽤了不受信任的 <code>HTML</code> 节点，该节点及其所有⼦节点将会被移除。</li><li><code>img</code> 标签仅⽀持⽹络图⽚。 </li></ul>        <h3 id="button"   >          <a href="#button" class="heading-link"><i class="fas fa-link"></i></a>button</h3>      <p>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://pic.downk.cc/item/5fae4a901cd1bbb86b977d1a.png" >      </p><figure class="highlight xml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span></span></span><br><span class="line"><span class="tag">  <span class="attr">type</span>=<span class="string">&quot;default&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">size</span>=<span class="string">&quot;&#123;&#123;defaultSize&#125;&#125;&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">loading</span>=<span class="string">&quot;&#123;&#123;loading&#125;&#125;&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">plain</span>=<span class="string">&quot;&#123;&#123;plain&#125;&#125;&quot;</span>&gt;</span></span><br><span class="line"> default</span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></div></figure><div class="table-container"><table><thead><tr><th>属性</th><th>类型</th><th>默认值</th><th>必填</th><th>说明</th></tr></thead><tbody><tr><td>size</td><td>string</td><td>default</td><td>否</td><td>按钮的⼤⼩</td></tr><tr><td>type</td><td>string</td><td>default</td><td>否</td><td>按钮的样式类型</td></tr><tr><td>plain</td><td>boolean</td><td>false</td><td>否</td><td>按钮的样式类型</td></tr><tr><td>disabled</td><td>boolean</td><td>false</td><td>否</td><td>是否禁⽤</td></tr><tr><td>loading</td><td>boolean</td><td>false</td><td>否</td><td>名称前是否带 loading 图标</td></tr><tr><td>form-type</td><td>string</td><td></td><td>否</td><td>⽤于<code>组件，点击分别会触发</code> 组件的submit/reset 事件</td></tr><tr><td>open-type</td><td>string</td><td></td><td>否</td><td>微信开放能⼒</td></tr></tbody></table></div><p><strong>size 的合法值</strong> </p><div class="table-container"><table><thead><tr><th>值</th><th>说明</th></tr></thead><tbody><tr><td>default</td><td>默认⼤⼩</td></tr><tr><td>mini</td><td>⼩尺⼨</td></tr></tbody></table></div><p><strong>type 的合法值</strong> </p><div class="table-container"><table><thead><tr><th>值</th><th>说明</th></tr></thead><tbody><tr><td>primary</td><td>绿⾊</td></tr><tr><td>default</td><td>⽩⾊</td></tr><tr><td>warn</td><td>红⾊</td></tr></tbody></table></div><p><strong>form-type 的合法值</strong></p><div class="table-container"><table><thead><tr><th>值</th><th>说明</th></tr></thead><tbody><tr><td>submit</td><td>提交表单</td></tr><tr><td>reset</td><td>重置表单</td></tr></tbody></table></div><p><strong>open-type 的合法值</strong></p><div class="table-container"><table><thead><tr><th>值</th><th>说明</th></tr></thead><tbody><tr><td>contact</td><td>打开客服会话，如果⽤⼾在会话中点击消息卡⽚后返回⼩程序，可以从bindcontact 回调中获得具体信息，<span class="exturl"><a class="exturl__link"   href="https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/customer-message/customer-message.html" >具体说明</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></td></tr><tr><td>share</td><td>触发⽤⼾转发，使⽤前建议先阅读<span class="exturl"><a class="exturl__link"   href="https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/share.html#%E4%BD%BF%E7%94%A8%E6%8C%87%E5%BC%95" >使⽤指引</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></td></tr><tr><td>getPhoneNumber</td><td>获取⽤⼾⼿机号，可以从bindgetphonenumber回调中获取到⽤⼾信息， <span class="exturl"><a class="exturl__link"   href="https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/getPhoneNumber.html" >具体说明</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></td></tr><tr><td>getUserInfo</td><td>获取⽤⼾信息，可以从bindgetuserinfo回调中获取到⽤⼾信息</td></tr><tr><td>launchApp</td><td>打开APP，可以通过app-parameter属性设定向APP传的参数<span class="exturl"><a class="exturl__link"   href="https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/launchApp.html" >具体说明</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></td></tr><tr><td>openSetting</td><td>打开授权设置⻚</td></tr><tr><td>feedback</td><td>打开“意⻅反馈”⻚⾯，⽤⼾可提交反馈内容并上传<span class="exturl"><a class="exturl__link"   href="https://developers.weixin.qq.com/miniprogram/dev/api/wx.getLogManager.html" >⽇志</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>，开发者可以登录<span class="exturl"><a class="exturl__link"   href="https://mp.weixin.qq.com/" >⼩程序管理后台</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>后进⼊左侧菜单“客服反馈”⻚⾯获取到反馈内容</td></tr></tbody></table></div><p><strong>open-type 的 contact的实现流程</strong></p><ol><li><p> 将⼩程序 的 <code>appid</code>  由测试号改为 ⾃⼰的 <code>appid</code></p></li><li><p>登录<span class="exturl"><a class="exturl__link"   href="https://mp.weixin.qq.com/" >微信⼩程序官⽹</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>，添加 <code>客服 - 微信</code> </p></li><li><p>为了⽅便演⽰，⽼师⾃⼰准备了两个账号</p><p>a.普通⽤⼾ A </p><p>b.客服-微信 B </p></li><li><p>就是⼲！ </p></li></ol>        <h3 id="icon"   >          <a href="#icon" class="heading-link"><i class="fas fa-link"></i></a>icon</h3>      <div class="table-container"><table><thead><tr><th>属性</th><th>类型</th><th>默认值</th><th>必填</th><th>说明</th></tr></thead><tbody><tr><td>type</td><td>string</td><td></td><td>是</td><td>icon的类型，有效值：success, success_no_circle,info, warn, waiting, cancel, download, search,clear</td></tr><tr><td>size</td><td>number/string</td><td>23</td><td>否</td><td>icon的⼤⼩</td></tr><tr><td>color</td><td>string</td><td></td><td>否</td><td>icon的颜⾊，同css的color</td></tr></tbody></table></div><p>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://pic.downk.cc/item/5fae4ff11cd1bbb86b99317a.png" >      </p><p><strong>代码:</strong> </p><p><strong>js</strong></p><figure class="highlight javascript"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Page(&#123;</span><br><span class="line">  data: &#123;</span><br><span class="line">    iconSize: [<span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>, <span class="number">60</span>, <span class="number">70</span>],</span><br><span class="line">    iconType: [</span><br><span class="line">      <span class="string">&#x27;success&#x27;</span>, <span class="string">&#x27;success_no_circle&#x27;</span>, <span class="string">&#x27;info&#x27;</span>, <span class="string">&#x27;warn&#x27;</span>, <span class="string">&#x27;waiting&#x27;</span>, <span class="string">&#x27;cancel&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;download&#x27;</span>, <span class="string">&#x27;search&#x27;</span>, <span class="string">&#x27;clear&#x27;</span></span><br><span class="line">   ],</span><br><span class="line">    iconColor: [</span><br><span class="line">      <span class="string">&#x27;red&#x27;</span>, <span class="string">&#x27;orange&#x27;</span>, <span class="string">&#x27;yellow&#x27;</span>, <span class="string">&#x27;green&#x27;</span>, <span class="string">&#x27;rgb(0,255,255)&#x27;</span>, <span class="string">&#x27;blue&#x27;</span>, <span class="string">&#x27;purple&#x27;</span></span><br><span class="line">   ],</span><br><span class="line"> &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></div></figure><p><strong>wxml</strong> </p><figure class="highlight xml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;group&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">block</span> <span class="attr">wx:for</span>=<span class="string">&quot;&#123;&#123;iconSize&#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">icon</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span> <span class="attr">size</span>=<span class="string">&quot;&#123;&#123;item&#125;&#125;&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">block</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span> <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;group&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">block</span> <span class="attr">wx:for</span>=<span class="string">&quot;&#123;&#123;iconType&#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">icon</span> <span class="attr">type</span>=<span class="string">&quot;&#123;&#123;item&#125;&#125;&quot;</span> <span class="attr">size</span>=<span class="string">&quot;40&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">block</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span> <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;group&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">block</span> <span class="attr">wx:for</span>=<span class="string">&quot;&#123;&#123;iconColor&#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">icon</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span> <span class="attr">size</span>=<span class="string">&quot;40&quot;</span> <span class="attr">color</span>=<span class="string">&quot;&#123;&#123;item&#125;&#125;&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">block</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></div></figure>        <h3 id="radio"   >          <a href="#radio" class="heading-link"><i class="fas fa-link"></i></a>radio</h3>      <blockquote><p>可以通过 color属性来修改颜色</p></blockquote><p>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://pic.downk.cc/item/5fae50ad1cd1bbb86b995dc1.png" >      </p><p>需要搭配 <span class="exturl"><a class="exturl__link"   href="https://developers.weixin.qq.com/miniprogram/dev/component/radio-group.html" >radio-group</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span> ⼀起使⽤ </p>        <h3 id="checkbox"   >          <a href="#checkbox" class="heading-link"><i class="fas fa-link"></i></a>checkbox</h3>      <blockquote><p>可以通过 color属性来修改颜色</p></blockquote><p>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://pic.downk.cc/item/5fae50f61cd1bbb86b996ef6.png" >      </p><p>需要搭配 <span class="exturl"><a class="exturl__link"   href="https://developers.weixin.qq.com/miniprogram/dev/component/checkbox-group.html" >checkbox-group</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span> ⼀起使⽤ </p>        <h2 id="⾃定义组件"   >          <a href="#⾃定义组件" class="heading-link"><i class="fas fa-link"></i></a>⾃定义组件</h2>      <blockquote><p>类似vue或者react中的自定义组件</p></blockquote><p>⼩程序允许我们使⽤⾃定义组件的⽅式来构建⻚⾯。 </p>        <h3 id="创建⾃定义组件"   >          <a href="#创建⾃定义组件" class="heading-link"><i class="fas fa-link"></i></a>创建⾃定义组件</h3>      <blockquote><p>类似于页面，一个自定义组件由 <code>json</code> <code>wxml</code> <code>wxss</code> <code>js</code> 4个文件组成</p></blockquote><p>可以在微信开发者⼯具中快速创建组件的⽂件结构 </p><p>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://pic.downk.cc/item/5fae519c1cd1bbb86b999e2c.png" >      </p><p>在⽂件夹内 <code>components/myHeader </code> ，创建组件 名为 <code>myHeader</code> </p><p>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://pic.downk.cc/item/5fae51e61cd1bbb86b99b7ba.png" >      </p>        <h4 id="声明组件"   >          <a href="#声明组件" class="heading-link"><i class="fas fa-link"></i></a>声明组件</h4>      <p>⾸先需要在组件的 <code>json</code> ⽂件中进⾏⾃定义组件声明 <code>myHeader.json</code></p><figure class="highlight json"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;component&quot;</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>        <h4 id="编辑组件"   >          <a href="#编辑组件" class="heading-link"><i class="fas fa-link"></i></a>编辑组件</h4>      <p>同时，还要在组件的 <code>wxml</code>  ⽂件中编写组件模板，在 <code>wxss</code> ⽂件中加⼊组件样式 <code>slot</code> 表⽰插槽，类似vue中的slot <code>myHeader.wxml</code> </p><figure class="highlight xml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 这是自定义组件的内部WXML结构 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;inner&quot;</span>&gt;</span></span><br><span class="line"> &#123;&#123;innerText&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">slot</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></div></figure><p>在组件的 <code>wxss</code> ⽂件中编写样式</p><blockquote><p>注意：在组件wxss中不应使用ID选择器、属性选择器和标签名选择器。</p></blockquote><p><code>myHeader.wxss</code></p><figure class="highlight css"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 这里的样式只应用于这个自定义组件 */</span></span><br><span class="line"><span class="selector-class">.inner</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: red; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>        <h4 id="注册组件"   >          <a href="#注册组件" class="heading-link"><i class="fas fa-link"></i></a>注册组件</h4>      <p>在组件的 <code>js</code> ⽂件中，需要使⽤ <code>Component()</code> 来注册组件，并提供组件的属性定义、内部数据和 ⾃定义⽅法</p><p><code>myHeader.js</code></p><figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Component(&#123;</span><br><span class="line">  properties: &#123;</span><br><span class="line">    <span class="comment">// 这里定义了innerText属性，属性值可以在组件使用时指定</span></span><br><span class="line">    innerText: &#123;</span><br><span class="line">      <span class="comment">// 期望要的数据是 string类型</span></span><br><span class="line">      type: <span class="built_in">String</span>,</span><br><span class="line">      value: <span class="string">&#x27;default value&#x27;</span>,</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;,</span><br><span class="line">  data: &#123;</span><br><span class="line">    <span class="comment">// 这里是一些组件内部数据</span></span><br><span class="line">    someData: &#123;&#125;</span><br><span class="line"> &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    <span class="comment">// 这里是一个自定义方法</span></span><br><span class="line">    customMethod: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></div></figure>        <h3 id="声明引⼊⾃定义组件"   >          <a href="#声明引⼊⾃定义组件" class="heading-link"><i class="fas fa-link"></i></a>声明引⼊⾃定义组件</h3>      <p>⾸先要在⻚⾯的 <code>json</code> ⽂件中进⾏引⽤声明。还要提供对应的组件名和组件路径</p><p><code>index.wxml</code> </p><figure class="highlight json"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"> <span class="comment">// 引用声明</span></span><br><span class="line">  <span class="attr">&quot;usingComponents&quot;</span>: &#123;</span><br><span class="line"> <span class="comment">// 要使用的组件的名称     // 组件的路径</span></span><br><span class="line">    <span class="attr">&quot;my-header&quot;</span>:<span class="string">&quot;/components/myHeader/myHeader&quot;</span></span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>        <h3 id="⻚⾯中使⽤⾃定义组件"   >          <a href="#⻚⾯中使⽤⾃定义组件" class="heading-link"><i class="fas fa-link"></i></a>⻚⾯中使⽤⾃定义组件</h3>      <figure class="highlight xml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 以下是对一个自定义组件的引用 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">my-header</span> <span class="attr">inner-text</span>=<span class="string">&quot;Some text&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span>&gt;</span>用来替代slot的<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">my-header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></div></figure>        <h3 id="其他属性"   >          <a href="#其他属性" class="heading-link"><i class="fas fa-link"></i></a>其他属性</h3>              <h3 id="定义段与⽰例⽅法"   >          <a href="#定义段与⽰例⽅法" class="heading-link"><i class="fas fa-link"></i></a>定义段与⽰例⽅法</h3>      <p><code>Component</code> 构造器可⽤于定义组件，调⽤ <code>Component</code> 构造器时可以指定组件的属性、数据、⽅法等。</p><div class="table-container"><table><thead><tr><th>定义段</th><th>类型</th><th>是否必填</th><th>描述</th></tr></thead><tbody><tr><td>properties</td><td>Object Map</td><td>否</td><td>组件的对外属性，是属性名到属性设置的映射表，参⻅下⽂</td></tr><tr><td>data</td><td>Object</td><td>否</td><td>组件的内部数据，和 <code>properties</code> ⼀同⽤于组件的模板渲染</td></tr><tr><td>observers</td><td>Object</td><td>否</td><td>组件数据字段监听器，⽤于监听 properties 和 data 的变化，参⻅ <span class="exturl"><a class="exturl__link"   href="https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/observer.html" >数据监听器</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></td></tr><tr><td>methods</td><td>Object</td><td>否</td><td>组件的⽅法，包括事件响应函数和任意的⾃定义⽅法，关于事件响应函数的使⽤，参⻅ <span class="exturl"><a class="exturl__link"   href="https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/events.html" >组件事件</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></td></tr><tr><td>created</td><td>Function</td><td>否</td><td>组件⽣命周期函数，在组件实例刚刚被创建时执⾏，注意此时不能调⽤ <code>setData</code> ，参⻅ <span class="exturl"><a class="exturl__link"   href="https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/lifetimes.html" >组件⽣命周期</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></td></tr><tr><td>attached</td><td>Function</td><td>否</td><td>组件⽣命周期函数，在组件实例被移动到节点树另⼀个位置时执⾏，参⻅ <span class="exturl"><a class="exturl__link"   href="https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/lifetimes.html" >组件⽣命周期</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></td></tr><tr><td>ready</td><td>Function</td><td>否</td><td>组件⽣命周期函数，在组件布局完成后执⾏，参⻅ 组件⽣命周期</td></tr><tr><td>moved</td><td>Function</td><td>否</td><td>组件⽣命周期函数，在组件实例被移动到节点树另⼀个位置时执⾏，参⻅ 组件⽣命周期</td></tr><tr><td>detached</td><td>Function</td><td>否</td><td>组件⽣命周期函数，在组件实例被从⻚⾯节点树移除时执⾏，参⻅ <span class="exturl"><a class="exturl__link"   href="https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/lifetimes.html" >组件⽣命周期</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></td></tr></tbody></table></div>        <h3 id="组件-⾃定义组件传参"   >          <a href="#组件-⾃定义组件传参" class="heading-link"><i class="fas fa-link"></i></a>组件-⾃定义组件传参</h3>      <ol><li>⽗组件通过<strong>属性</strong>的⽅式给⼦组件传递参数 </li><li>⼦组件通过<strong>事件</strong>的⽅式向⽗组件传递参数 </li></ol>        <h4 id="过程"   >          <a href="#过程" class="heading-link"><i class="fas fa-link"></i></a>过程</h4>      <ol><li><p><strong>⽗组件</strong> 把数据 <code>&#123;&#123;tabs&#125;&#125;</code> 传递到 ⼦组件的 <code>tabItems</code> 属性中 </p></li><li><p><strong>⽗组件</strong> 监听 <code>onMyTab</code> 事件</p></li><li><p><strong>⼦组件</strong> 触发 <code>bindmytap</code> 中的 <code>mytap</code> 事件</p><p>⾃定义组件触发事件时，需要使⽤ <code>triggerEvent </code>  ⽅法，指定 <code>事件名</code> 、<code>detail</code> 对象</p></li><li><p>⽗ -&gt; ⼦ 动态传值 <code>this.selectComponent(&quot;#tabs&quot;);</code> </p></li></ol><p><strong>⽗组件代码</strong> </p><figure class="highlight html"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">// page.wxml</span><br><span class="line"><span class="tag">&lt;<span class="name">tabs</span> <span class="attr">tabItems</span>=<span class="string">&quot;&#123;&#123;tabs&#125;&#125;&quot;</span> <span class="attr">bindmytap</span>=<span class="string">&quot;onMyTab&quot;</span> &gt;</span></span><br><span class="line"> 内容-这里可以放插槽</span><br><span class="line"><span class="tag">&lt;/<span class="name">tabs</span>&gt;</span></span><br><span class="line">// page.js</span><br><span class="line">  data: &#123;</span><br><span class="line">    tabs:[</span><br><span class="line">     &#123;name:&quot;体验问题&quot;&#125;,</span><br><span class="line">     &#123;name:&quot;商品、商家投诉&quot;&#125;</span><br><span class="line">   ]</span><br><span class="line"> &#125;,</span><br><span class="line">  onMyTab(e)&#123;</span><br><span class="line">    console.log(e.detail);</span><br><span class="line"> &#125;,</span><br></pre></td></tr></table></div></figure><p><strong>⼦组件代码</strong> </p><figure class="highlight xml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">// com.wxml</span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;tabs&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;tab_title&quot;</span>  &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">block</span>  <span class="attr">wx:for</span>=<span class="string">&quot;&#123;&#123;tabItems&#125;&#125;&quot;</span> <span class="attr">wx:key</span>=<span class="string">&quot;&#123;&#123;item&#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">view</span> <span class="attr">bindtap</span>=<span class="string">&quot;handleItemActive&quot;</span> <span class="attr">data-index</span>=<span class="string">&quot;&#123;&#123;index&#125;&#125;&quot;</span>&gt;</span>&#123;&#123;item.name&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">block</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;tab_content&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">slot</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">// com.js</span><br><span class="line">Component(&#123;</span><br><span class="line">  properties: &#123;</span><br><span class="line">    tabItems:&#123;</span><br><span class="line">      type:Array,</span><br><span class="line">      value:[]</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;,</span><br><span class="line">  /**</span><br><span class="line">   * 组件的初始数据</span><br><span class="line">   */</span><br><span class="line">  data: &#123;</span><br><span class="line"> &#125;,</span><br><span class="line">  /**</span><br><span class="line">   * 组件的方法列表</span><br><span class="line">   */</span><br><span class="line">  methods: &#123;</span><br><span class="line">    handleItemActive(e)&#123;</span><br><span class="line">      this.triggerEvent(&#x27;mytap&#x27;,&#x27;haha&#x27;);</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></div></figure>        <h3 id="小结"   >          <a href="#小结" class="heading-link"><i class="fas fa-link"></i></a>小结</h3>      <ol><li><p>标签名 是 中划线的⽅式 </p></li><li><p> 属性的⽅式 也是要中划线的⽅式 </p></li><li><p>其他情况可以使⽤驼峰命名</p><p>a.组件的⽂件名如 <code>myHeader.js</code> 的等 </p><p>b. 组件内的要接收的属性名 如 <code>innerText</code> </p></li><li><p><span class="exturl"><a class="exturl__link"   href="https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/component.html" >更多。。</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p></li></ol>        <h2 id="⼩程序⽣命周期"   >          <a href="#⼩程序⽣命周期" class="heading-link"><i class="fas fa-link"></i></a>⼩程序⽣命周期</h2>      <p>分为<strong>应⽤⽣命周期</strong>和<strong>⻚⾯⽣命周期</strong></p><blockquote><p>关于小程序前后台的定义和小程序的运行机制，请参考<span class="exturl"><a class="exturl__link"   href="https://developers.weixin.qq.com/miniprogram/dev/framework/operating-mechanism.html" >运行机制</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>章节。</p></blockquote>        <h3 id="应⽤⽣命周期"   >          <a href="#应⽤⽣命周期" class="heading-link"><i class="fas fa-link"></i></a>应⽤⽣命周期</h3>      <div class="table-container"><table><thead><tr><th>属性</th><th>类型</th><th>默认值</th><th>必填</th><th>说明</th></tr></thead><tbody><tr><td>onLaunch</td><td>function</td><td></td><td>否</td><td>监听⼩程序初始化。</td></tr><tr><td>onShow</td><td>function</td><td></td><td>否</td><td>监听⼩程序启动或切前台。</td></tr><tr><td>onHide</td><td>function</td><td></td><td>否</td><td>监听⼩程序切后台。</td></tr><tr><td>onError</td><td>function</td><td></td><td>否</td><td>错误监听函数。</td></tr><tr><td>onPageNotFound</td><td>function</td><td></td><td>否</td><td>⻚⾯不存在监听函数。</td></tr></tbody></table></div>        <h3 id="⻚⾯⽣命周期"   >          <a href="#⻚⾯⽣命周期" class="heading-link"><i class="fas fa-link"></i></a>⻚⾯⽣命周期</h3>      <div class="table-container"><table><thead><tr><th>属性</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>data</td><td>Object</td><td>⻚⾯的初始数据</td></tr><tr><td>onLoad</td><td>function</td><td>⽣命周期回调—监听⻚⾯加载</td></tr><tr><td>onShow</td><td>function</td><td>⽣命周期回调—监听⻚⾯显⽰</td></tr><tr><td>onReady</td><td>function</td><td>⽣命周期回调—监听⻚⾯初次渲染完成</td></tr><tr><td>onHide</td><td>function</td><td>⽣命周期回调—监听⻚⾯隐藏</td></tr><tr><td>onUnload</td><td>function</td><td>⽣命周期回调—监听⻚⾯卸载</td></tr><tr><td>onPullDownRefresh</td><td>function</td><td>监听⽤⼾下拉动作</td></tr><tr><td>onReachBottom</td><td>function</td><td>⻚⾯上拉触底事件的处理函数</td></tr><tr><td>onShareAppMessage</td><td>function</td><td>⽤⼾点击右上⻆转发</td></tr><tr><td>onPageScroll</td><td>function</td><td>⻚⾯滚动触发事件的处理函数</td></tr><tr><td>onResize</td><td>function</td><td>⻚⾯尺⼨改变时触发，详⻅ 响应显⽰区域变化</td></tr><tr><td>onTabItemTap</td><td>function</td><td>当前是 tab ⻚时，点击 tab 时触发</td></tr></tbody></table></div>        <h3 id="⻚⾯⽣命周期图解"   >          <a href="#⻚⾯⽣命周期图解" class="heading-link"><i class="fas fa-link"></i></a>⻚⾯⽣命周期图解</h3>      <p>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://pic.downk.cc/item/5faf3f0b1cd1bbb86bcfaf9e.png" >      </p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;微信小程序介绍&quot;   &gt;
          &lt;a href=&quot;#微信小程序介绍&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;微信小程序介绍&lt;/h2&gt;
      &lt;p&gt;
        &lt;img   class=&quot;lazyload lazyload-gif&quot;
          src=&quot;/images/loading.svg&quot; data-src=&quot;https://pic.downk.cc/item/5fab5a421cd1bbb86be939e9.png&quot; &gt;
      &lt;/p&gt;
&lt;p&gt;微信⼩程序，简称&lt;span class=&quot;exturl&quot;&gt;&lt;a class=&quot;exturl__link&quot;   href=&quot;https://baike.baidu.com/item/%E5%B0%8F%E7%A8%8B%E5%BA%8F&quot; &gt;⼩程序&lt;/a&gt;&lt;span class=&quot;exturl__icon&quot;&gt;&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;，英⽂名 Mini Program ，是⼀种不需要下载安装即可使⽤的应⽤，它实现了应⽤“触⼿可及”的梦想，⽤⼾扫⼀扫或搜⼀下即可打开应⽤ &lt;/p&gt;</summary>
    
    
    
    <category term="小程序" scheme="https://admin.wbf.ink/categories/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
  </entry>
  
  <entry>
    <title>Android自定义绘图</title>
    <link href="https://admin.wbf.ink/2020/10/31/android-draw/"/>
    <id>https://admin.wbf.ink/2020/10/31/android-draw/</id>
    <published>2020-10-31T08:13:59.000Z</published>
    <updated>2020-10-31T08:15:53.480Z</updated>
    
    <content type="html"><![CDATA[        <h2 id="完整代码"   >          <a href="#完整代码" class="heading-link"><i class="fas fa-link"></i></a>完整代码</h2>      <figure class="highlight kotlin"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.content.Context</span><br><span class="line"><span class="keyword">import</span> android.graphics.*</span><br><span class="line"><span class="keyword">import</span> android.util.AttributeSet</span><br><span class="line"><span class="keyword">import</span> android.util.Log</span><br><span class="line"><span class="keyword">import</span> android.view.View</span><br><span class="line"><span class="keyword">import</span> androidx.core.content.ContextCompat</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.withRotation</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.withTranslation</span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.Lifecycle</span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.LifecycleObserver</span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.OnLifecycleEvent</span><br><span class="line"><span class="keyword">import</span> kotlinx.coroutines.*</span><br><span class="line"><span class="keyword">import</span> kotlin.math.PI</span><br><span class="line"><span class="keyword">import</span> kotlin.math.cos</span><br><span class="line"><span class="keyword">import</span> kotlin.math.sin</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyView</span> <span class="meta">@JvmOverloads</span> <span class="keyword">constructor</span></span>(</span><br><span class="line">    context: Context, attrs: AttributeSet? = <span class="literal">null</span>, defStyleAttr: <span class="built_in">Int</span> = <span class="number">0</span></span><br><span class="line">) : View(context, attrs, defStyleAttr),LifecycleObserver &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> sineWaveSamplesPath = Path()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> rotatingJob : Job? = <span class="literal">null</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> mWidth = <span class="number">0f</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> mHeight = <span class="number">0f</span></span><br><span class="line">    <span class="comment">// 画布旋转角度</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> mAngle = <span class="number">10f</span></span><br><span class="line">    <span class="comment">// 圆的半径</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> mRadius = <span class="number">0f</span></span><br><span class="line">    <span class="comment">// 画实现的画笔</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> solidLinePaint = Paint().apply &#123;</span><br><span class="line">        style = Paint.Style.STROKE</span><br><span class="line">        strokeWidth = <span class="number">2f</span></span><br><span class="line">        color = ContextCompat.getColor(context,R.color.colorWhite)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 画文字</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> textPaint = Paint().apply&#123;</span><br><span class="line">        textSize = <span class="number">30f</span></span><br><span class="line">        typeface = Typeface.DEFAULT_BOLD</span><br><span class="line">        color = ContextCompat.getColor(context,R.color.colorWhite)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 画文字</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> textBFPaint = Paint().apply&#123;</span><br><span class="line">        textSize = <span class="number">50f</span></span><br><span class="line">        typeface = Typeface.DEFAULT_BOLD</span><br><span class="line">        color = ContextCompat.getColor(context,R.color.colorWhite)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 画虚线</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> dashedLinePaint = Paint().apply &#123;</span><br><span class="line">        style = Paint.Style.STROKE</span><br><span class="line">        <span class="comment">// 线长10f，中断10f</span></span><br><span class="line">        pathEffect = DashPathEffect(floatArrayOf(<span class="number">10f</span>,<span class="number">10f</span>),<span class="number">0f</span>)</span><br><span class="line">        <span class="comment">// 线粗细</span></span><br><span class="line">        strokeWidth = <span class="number">2f</span></span><br><span class="line">        color = ContextCompat.getColor(context,R.color.colorYellow)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 画半径</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> radiusLinePaint = Paint().apply &#123;</span><br><span class="line">        style = Paint.Style.STROKE</span><br><span class="line">        strokeWidth = <span class="number">5f</span></span><br><span class="line">        color = ContextCompat.getColor(context,R.color.colorAccent)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 画小白点</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> filledCirclePaint = Paint().apply &#123;</span><br><span class="line">        style = Paint.Style.FILL</span><br><span class="line">        color = ContextCompat.getColor(context,R.color.colorWhite)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onSizeChanged</span><span class="params">(w: <span class="type">Int</span>, h: <span class="type">Int</span>, oldw: <span class="type">Int</span>, oldh: <span class="type">Int</span>)</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onSizeChanged(w, h, oldw, oldh)</span><br><span class="line">        Log.d(<span class="string">&quot;hello&quot;</span>,<span class="string">&quot;onSizeChanged&quot;</span>)</span><br><span class="line">        mWidth = w.toFloat()</span><br><span class="line">        mHeight = h.toFloat()</span><br><span class="line">        mRadius = <span class="keyword">if</span> (w&lt;h/<span class="number">2</span>) w/<span class="number">2</span>.toFloat() <span class="keyword">else</span> h/<span class="number">4</span>.toFloat()</span><br><span class="line">        mRadius -= <span class="number">20f</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onDraw</span><span class="params">(canvas: <span class="type">Canvas</span>?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onDraw(canvas)</span><br><span class="line">        canvas?.apply &#123;</span><br><span class="line">            drawAxises(<span class="keyword">this</span>)</span><br><span class="line">            drawLabel(<span class="keyword">this</span>)</span><br><span class="line">            drawDashedCircle(<span class="keyword">this</span>)</span><br><span class="line">            drawVector(<span class="keyword">this</span>)</span><br><span class="line">            drawProjections(<span class="keyword">this</span>)</span><br><span class="line">            drawSineWave(<span class="keyword">this</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 画坐标轴</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">drawAxises</span><span class="params">(canvas:<span class="type">Canvas</span>)</span></span>&#123;</span><br><span class="line">        <span class="comment">// 移动画布位置到中间</span></span><br><span class="line">        canvas.withTranslation(mWidth/<span class="number">2</span>,mHeight/<span class="number">2</span>) &#123;</span><br><span class="line">            drawLine(-mWidth/<span class="number">2</span>,<span class="number">0f</span>,mWidth/<span class="number">2</span>,<span class="number">0f</span>,solidLinePaint)</span><br><span class="line">            drawLine(<span class="number">0f</span>,-mHeight/<span class="number">2</span>,<span class="number">0f</span>,mHeight/<span class="number">2</span>,solidLinePaint)</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 画虚线圆</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">drawDashedCircle</span><span class="params">(canvas:<span class="type">Canvas</span>)</span></span>&#123;</span><br><span class="line">        <span class="comment">// 移动到四分之三处</span></span><br><span class="line">        canvas.withTranslation(mWidth/<span class="number">2</span>,mHeight/<span class="number">4</span>*<span class="number">3</span>) &#123;</span><br><span class="line">            drawLine(-mWidth/<span class="number">2</span>,<span class="number">0f</span>,mWidth/<span class="number">2</span>,<span class="number">0f</span>,solidLinePaint)</span><br><span class="line">            drawCircle(<span class="number">0f</span>,<span class="number">0f</span>,mRadius,dashedLinePaint)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 画文字</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">drawLabel</span><span class="params">(canvas:<span class="type">Canvas</span>)</span></span>&#123;</span><br><span class="line">        canvas.apply &#123;</span><br><span class="line">            drawText(<span class="string">&quot;指数函数与旋转矢量&quot;</span>,<span class="number">50f</span>,mHeight-<span class="number">50f</span>,textPaint)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 画矢量半径</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">drawVector</span><span class="params">(canvas:<span class="type">Canvas</span>)</span></span>&#123;</span><br><span class="line">        canvas.withTranslation(mWidth/<span class="number">2</span>,mHeight/<span class="number">4</span>*<span class="number">3</span>) &#123;</span><br><span class="line">            <span class="comment">// 旋转画布</span></span><br><span class="line">            withRotation(-mAngle) &#123;</span><br><span class="line">                drawLine(<span class="number">0f</span>,<span class="number">0f</span>,mRadius,<span class="number">0f</span>,radiusLinePaint)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 画小白点投影</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">drawProjections</span><span class="params">(canvas: <span class="type">Canvas</span>)</span></span>&#123;</span><br><span class="line">        canvas.withTranslation(mWidth/<span class="number">2</span>,mHeight/<span class="number">2</span>) &#123;</span><br><span class="line">            drawCircle(mRadius * cos(mAngle.toRadians()),<span class="number">0f</span>,<span class="number">10f</span>,filledCirclePaint)</span><br><span class="line">        &#125;</span><br><span class="line">        canvas.withTranslation(mWidth/<span class="number">2</span>,mHeight/<span class="number">4</span>*<span class="number">3</span>) &#123;</span><br><span class="line">            drawCircle(mRadius * cos(mAngle.toRadians()),<span class="number">0f</span>,<span class="number">10f</span>,filledCirclePaint)</span><br><span class="line">        &#125;</span><br><span class="line">        canvas.withTranslation(mWidth/<span class="number">2</span>,mHeight/<span class="number">4</span>*<span class="number">3</span>) &#123;</span><br><span class="line">            <span class="keyword">val</span> x = mRadius * cos(mAngle.toRadians())</span><br><span class="line">            <span class="keyword">val</span> y = mRadius * sin(mAngle.toRadians())</span><br><span class="line">            withTranslation(x ,-y) &#123;</span><br><span class="line">                drawLine(<span class="number">0f</span>,<span class="number">0f</span>,<span class="number">0f</span>,y,solidLinePaint)</span><br><span class="line">                drawLine(<span class="number">0f</span>,<span class="number">0f</span>,<span class="number">0f</span>,-mHeight/<span class="number">4</span>+y,dashedLinePaint)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 画路径</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">drawSineWave</span><span class="params">(canvas: <span class="type">Canvas</span>)</span></span>&#123;</span><br><span class="line">        canvas.withTranslation(mWidth/<span class="number">2</span>,mHeight/<span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">val</span> samplesCount = <span class="number">100</span></span><br><span class="line">            <span class="keyword">val</span> dy = mHeight / <span class="number">2</span> /samplesCount</span><br><span class="line">            sineWaveSamplesPath.reset()</span><br><span class="line">            sineWaveSamplesPath.moveTo(mRadius * cos(mAngle.toRadians()),<span class="number">0f</span>)</span><br><span class="line">            repeat(samplesCount)&#123;</span><br><span class="line">                <span class="keyword">val</span> x = mRadius * cos(it*-<span class="number">0.15</span>+mAngle.toRadians()).toFloat()</span><br><span class="line">                <span class="keyword">val</span> y = -dy * it</span><br><span class="line">                <span class="comment">// 沿着路径添加贝塞尔曲线</span></span><br><span class="line">                sineWaveSamplesPath.quadTo(x,y,x,y)</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            drawPath(sineWaveSamplesPath,radiusLinePaint)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 启动</span></span><br><span class="line">    <span class="meta">@OnLifecycleEvent(Lifecycle.Event.ON_RESUME)</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">startRotating</span><span class="params">()</span></span>&#123;</span><br><span class="line">        rotatingJob = CoroutineScope(Dispatchers.Main).launch &#123;</span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line">                delay(<span class="number">100</span>)</span><br><span class="line">                mAngle += <span class="number">5f</span></span><br><span class="line">                invalidate()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 暂停</span></span><br><span class="line">    <span class="meta">@OnLifecycleEvent(Lifecycle.Event.ON_PAUSE)</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">pauseRotating</span><span class="params">()</span></span>&#123;</span><br><span class="line">        rotatingJob?.cancel()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 角度转弧度扩展函数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="built_in">Float</span>.<span class="title">toRadians</span><span class="params">()</span></span> = <span class="keyword">this</span>/<span class="number">180</span>* PI.toFloat()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>]]></content>
    
    
      
      
    <summary type="html">
        &lt;h2 id=&quot;完整代码&quot;   &gt;
          &lt;a href=&quot;#完整代码&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;完整代码&lt;/h2&gt;
      &lt;figure class=&quot;high</summary>
      
    
    
    
    <category term="Android" scheme="https://admin.wbf.ink/categories/Android/"/>
    
    
    <category term="自定义View" scheme="https://admin.wbf.ink/tags/%E8%87%AA%E5%AE%9A%E4%B9%89View/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://admin.wbf.ink/2020/10/27/hello-world/"/>
    <id>https://admin.wbf.ink/2020/10/27/hello-world/</id>
    <published>2020-10-27T08:41:17.756Z</published>
    <updated>2020-10-27T08:41:17.756Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <span class="exturl"><a class="exturl__link"   href="https://hexo.io/" >Hexo</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>! This is your very first post. Check <span class="exturl"><a class="exturl__link"   href="https://hexo.io/docs/" >documentation</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span> for more info. If you get any problems when using Hexo, you can find the answer in <span class="exturl"><a class="exturl__link"   href="https://hexo.io/docs/troubleshooting.html" >troubleshooting</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span> or you can ask me on <span class="exturl"><a class="exturl__link"   href="https://github.com/hexojs/hexo/issues" >GitHub</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>.</p>        <h2 id="Quick-Start"   >          <a href="#Quick-Start" class="heading-link"><i class="fas fa-link"></i></a>Quick Start</h2>              <h3 id="Create-a-new-post"   >          <a href="#Create-a-new-post" class="heading-link"><i class="fas fa-link"></i></a>Create a new post</h3>      <figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></div></figure><p>More info: <span class="exturl"><a class="exturl__link"   href="https://hexo.io/docs/writing.html" >Writing</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>        <h3 id="Run-server"   >          <a href="#Run-server" class="heading-link"><i class="fas fa-link"></i></a>Run server</h3>      <figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></div></figure><p>More info: <span class="exturl"><a class="exturl__link"   href="https://hexo.io/docs/server.html" >Server</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>        <h3 id="Generate-static-files"   >          <a href="#Generate-static-files" class="heading-link"><i class="fas fa-link"></i></a>Generate static files</h3>      <figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></div></figure><p>More info: <span class="exturl"><a class="exturl__link"   href="https://hexo.io/docs/generating.html" >Generating</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>        <h3 id="Deploy-to-remote-sites"   >          <a href="#Deploy-to-remote-sites" class="heading-link"><i class="fas fa-link"></i></a>Deploy to remote sites</h3>      <figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></div></figure><p>More info: <span class="exturl"><a class="exturl__link"   href="https://hexo.io/docs/one-command-deployment.html" >Deployment</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;span class=&quot;exturl&quot;&gt;&lt;a class=&quot;exturl__link&quot;   href=&quot;https://hexo.io/&quot; &gt;Hexo&lt;/a&gt;&lt;span class=&quot;exturl__icon&quot;&gt;&lt;i class=&quot;fas fa-ex</summary>
      
    
    
    
    
  </entry>
  
</feed>
